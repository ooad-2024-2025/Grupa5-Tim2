@model OffroadAdventure.Models.ZahtjevZaRentanje

@{
    ViewData["Title"] = "Rezervacija";
    var brojVozila = (ViewBag.OdabranaVozila as List<OffroadAdventure.Models.Vozilo>)?.Count ?? 0;
    var cijenaPoDanu = (ViewBag.OdabranaVozila as List<OffroadAdventure.Models.Vozilo>)?.Sum(v => v.cijenaPoDanu);
}

<div class="rezervacija-wrapper">
    <div class="forma-strana">
        <h2>Rezervacija</h2>
        <form asp-controller="ZahtjevZaRentanje" asp-action="Create" method="post">
            <div class="rezervacija-odabrana-vozila">
                <label>Odabrana vozila:</label>
                <div class="odabrana-vozila-grid">
                    @foreach (var vozilo in ViewBag.OdabranaVozila as List<OffroadAdventure.Models.Vozilo>)
                    {
                        <div class="vozilo-kartica">
                            <img src="@vozilo.slikaURL" alt="slika vozila" />
                            <div class="kartica-sadrzaj">
                                <strong>@vozilo.model</strong>
                                <div>Vrsta: @vozilo.tip</div>
                                <div class="cijena">@vozilo.cijenaPoDanu KM</div>
                            </div>
                            <input type="hidden" name="vozilaId" value="@vozilo.id" />
                        </div>
                    }
                </div>

            </div>

            <div class="form-row">
                <input asp-for="ime" placeholder="Ime" pattern="^[A-ZČĆŽŠĐa-zčćžšđ]{2,}$" title="Ime može sadržavati samo slova" required />
                <input asp-for="prezime" placeholder="Prezime" pattern="^[A-ZČĆŽŠĐa-zčćžšđ]{2,}$" title="Prezime može sadržavati samo slova" required />
            </div>

            <div class="form-row">
                <input asp-for="brojTelefona" placeholder="Broj telefona"
                       pattern="^\d{9,10}$"
                       title="Broj telefona mora sadržavati 9 ili 10 cifara bez razmaka" required />
                <input asp-for="email" placeholder="Email adresa"
                       pattern="^\S+$"
                       title="Email ne smije sadržavati razmake"
                       required />
           
            </div>

            <div class="form-row">
                <div style="display: flex; flex-direction: column; flex: 1;">
                    <label asp-for="datumOd">Datum od:</label>
                    <input asp-for="datumOd" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.AddYears(1).ToString("yyyy-MM-dd")" />
                </div>

                <div style="display: flex; flex-direction: column; flex: 1;">
                    <label asp-for="datumDo">Datum do:</label>
                    <input asp-for="datumDo" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.AddYears(1).ToString("yyyy-MM-dd")" />
                </div>

                <div style="display: flex; flex-direction: column; flex: 1;">
                    <label for="brojVozila" style="visibility: hidden;">Nevidljiv label</label>
                    <input type="text" id="brojVozila" value="Broj vozila: @brojVozila" disabled />
                    <input type="hidden" asp-for="brojVozila" value="@brojVozila" />
                    <input type="hidden" name="izvor" value="Rezervacija" />
                </div>
            </div>

            <textarea asp-for="dodatniZahtjev" placeholder="Dodatni zahtjevi"></textarea>

            <div class="dugmici">
                <button type="submit" name="akcija" value="gotovina">Plati pri preuzimanju</button>
                @if (User.Identity.IsAuthenticated)
                {
                    <button type="submit" name="akcija" value="kartica" >Plati karticom</button>
                }
            </div>

            <div class="cijena-info">
                <span id="popust-info">Popust: @ViewBag.Popust %</span>
                <span id="cijena-bez-info">Cijena bez popusta: @ViewBag.CijenaBez KM</span>
                <span id="cijena-sa-info">Cijena sa popustom: @ViewBag.CijenaSa KM</span>
            </div>
        </form>    
        @if (TempData["porukaGreska"] != null)
        {
            <div class="alert alert-danger" role="alert">
                @TempData["porukaGreska"]
            </div>
        }
    </div>


    <div class="tekst-strana">
        <p><strong>Napravite rezervaciju svog vozila na vrijeme.</strong></p>
        <p>
            Naš tim će Vas kontaktirati kako bismo zvanično potvrdili Vašu rezervaciju.
            Ukoliko ne želite praviti rezervaciju putem elektronske forme, molimo Vas da nas kontaktirate na broj telefona.
        </p>
        <p>Forma je informativnog sadržaja – neophodno je napraviti telefonsku potvrdu prije datuma i vremena rezervacije.</p>
    </div>

    @section Scripts {
        <script>
            const isAuth = @(User.Identity.IsAuthenticated.ToString().ToLower());
            const datumOdInput = document.getElementById('datumOd');
            const datumDoInput = document.getElementById('datumDo');
            const popustSpan = document.getElementById('popust-info');
            const cijenaBezSpan = document.getElementById('cijena-bez-info');
            const cijenaSaSpan = document.getElementById('cijena-sa-info');

            const brojVozila = @brojVozila;
            const cijenaPoDanu = @cijenaPoDanu;

            function izracunajZaPrikaz() {
                const od = new Date(datumOdInput.value);
                const ddo = new Date(datumDoInput.value);
                if (isNaN(od) || isNaN(ddo) || od > ddo) return;

                const brojDana = (ddo - od) / (1000 * 60 * 60 * 24) + 1;
                const osnovnaCijena = cijenaPoDanu * brojDana;

                let popustProcenat;
                let cijenaSa;

                if (isAuth) {
                    popustProcenat = Math.min(
                        (Math.max(brojVozila - 1, 0) * 5 + Math.max(brojDana - 1, 0) * 2),
                        50
                    );
                    cijenaSa = osnovnaCijena * (1 - popustProcenat / 100);
                } else {
                    popustProcenat = 0;
                    cijenaSa = osnovnaCijena;
                }

                popustSpan.innerText = `Popust: ${popustProcenat.toFixed(0)}%`;
                cijenaBezSpan.innerText = `Cijena bez popusta: ${osnovnaCijena.toFixed(2)} KM`;
                cijenaSaSpan.innerText = `Cijena sa popustom: ${cijenaSa.toFixed(2)} KM`;
            }


            datumOdInput.addEventListener('change', function () {
                datumDoInput.min = datumOdInput.value;
                izracunajZaPrikaz();
            });

            datumDoInput.addEventListener('change', function () {
                datumOdInput.max = datumDoInput.value;
                izracunajZaPrikaz();
            });

            window.addEventListener('DOMContentLoaded', () => {
                if (datumOdInput.value)
                    datumDoInput.min = datumOdInput.value;

                if (datumDoInput.value)
                    datumOdInput.max = datumDoInput.value;
            });
                window.addEventListener('DOMContentLoaded', () => {
                const today = new Date().toISOString().split('T')[0];

           
                if (!datumOdInput.value) datumOdInput.value = today;
                if (!datumDoInput.value) datumDoInput.value = today;

                datumDoInput.min = datumOdInput.value;
                datumOdInput.max = datumDoInput.value;

                izracunajZaPrikaz();
            });
        </script>
    }

