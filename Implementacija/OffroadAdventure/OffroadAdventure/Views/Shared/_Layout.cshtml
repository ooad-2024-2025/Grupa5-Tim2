@using Microsoft.AspNetCore.Identity
@using OffroadAdventure.Models
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    var user = User.Identity.IsAuthenticated ? await UserManager.GetUserAsync(User) : null;
}
@{
    var isEditZahtjev = Context.Request.Path.Value?.ToLower() is "/zahtjevzarentanje" or "/zahtjevzarentanje/";

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OffroadAdventure</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/OffroadAdventure.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg custom-navbar">
            <div class="container-fluid">
                <span class="navbar-brand d-flex align-items-center brand-text">
                    <img src="~/img/logo.png" alt="Logo" class="logo-img me-2" />
                    OFFROAD ADVENTURE
                </span>

                <div class="collapse navbar-collapse justify-content-between">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link nav-link-custom" asp-area="" asp-controller="Home" asp-action="Index">Početna</a>
                        </li>
                        @if (user != null && await UserManager.IsInRoleAsync(user, "Administrator"))
                        {
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-controller="Vozilo" asp-action="Index">Upravljaj Vozilima</a>
                            </li>
                        }
                        @if (user != null && (await UserManager.IsInRoleAsync(user, "Administrator") || await UserManager.IsInRoleAsync(user, "Zaposlenik")))
                        {
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-controller="ZahtjevZaRentanje" asp-action="Index">Upravljaj Zahtjevima</a>
                            </li>
                        }
                        @if (user != null && await UserManager.IsInRoleAsync(user, "Administrator"))
                        {
                            <li class="nav-item">
                                <a class="nav-link nav-link-custom" asp-controller="Komentar" asp-action="Index">Upravljaj Komentarima</a>
                            </li>
                        }
                    </ul>

                    <div class="d-flex align-items-center">
                        @if (user != null)
                        {
                            <span class="text-white p-3">@user.Ime @user.Prezime</span>
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post" class="m-0">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-outline-light">Odjava</button>
                            </form>
                        }
                        else
                        {
                            <a class="btn btn-login me-2" asp-area="Identity" asp-page="/Account/Login">Prijava</a>
                            <a class="btn btn-register" asp-area="Identity" asp-page="/Account/Register">Registracija</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <!-- NOTIFIKACIJE -->
    <div class="notification-container">
        <a href="javascript:void(0);" class="notification-link" onclick="toggleNotifications()">
            <span class="notification-text">Notifikacije</span>
            <img src="~/img/message-icon-regular.png" alt="Notifikacije" class="notification-icon" id="notificationIcon" />
        </a>
        <div class="notification-popup" id="notificationPopup" style="display:none;">
            <div id="notificationContent">
                <form id="hiddenForm">@Html.AntiForgeryToken()</form>
                <p>Učitavanje notifikacija...</p>
            </div>
        </div>
    </div>

    <div class="@(isEditZahtjev ? "" : "container")">
        <main role="main" class="@(isEditZahtjev ? "p-0" : "pb-3")">
            @RenderBody()
        </main>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
                function toggleNotifications() {
            const popup = document.getElementById("notificationPopup");
            const visible = popup.style.display === "block";
            popup.style.display = visible ? "none" : "block";

            if (!visible) {
                fetch('/Notifikacijas/PrikaziPopup')
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById("notificationPopup").innerHTML = html;

                        fetch('/Notifikacijas/OznaciProcitane', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        }).then(() => {
                            provjeriNotifikacije(); 
                        });
                    });
            }
        }

        function obrisiNotifikaciju(id) {
            fetch(`/Notifikacijas/ObrisiJednu?id=${id}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            }).then(response => {
                if (response.ok) {
                    fetch('/Notifikacijas/PrikaziPopup')
                        .then(res => res.text())
                        .then(html => {
                            document.getElementById("notificationPopup").innerHTML = html;
                        });
                }
            });
        }
                    function provjeriNotifikacije() {
            fetch('/Notifikacijas/ProvjeriNove')
                .then(response => response.json())
                .then(postojeNeprocitane => {
                    const ikona = document.getElementById("notificationIcon");
                    if (postojeNeprocitane) {
                        ikona.src = '/img/message-icon-alert.png';
                    } else {
                        ikona.src = '/img/message-icon-regular.png';
                    }
                });
        }

        document.addEventListener("DOMContentLoaded", function () {
            provjeriNotifikacije();
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
